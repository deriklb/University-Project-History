########## importing classes to use

import numpy as np
import matplotlib.pyplot as plt
import neurolab as nl
%matplotlib inline

########## this is the data that we collected


                        # minutes studying per week/100  ,  sleep time  , passed an exam (target)
data =      np.array([   [0.42,                               0.59,              1], #yes
                         [0.50,                               0.40,              1], #yes
                         [0.20,                               0.27,              0], #no
                         [0.03,                               0.22,              0], #no
                         [0.50,                               0.58,              1], #yes
                       [0.22,                              0.46,               0], #no
                       [0.01,                              0.37,               0], #no
                       [0.04,                              0.22,               0], #no
                       [0.84,                              0.54,               1], #yes
                       [0.76,                              0.30,               1], #yes
                         [0.77,                               0.21,              0], #no
                         [0.12,                               0.19,              0], #no
                         [0.45,                               0.56,              1], #yes
                         [0.45,                               0.39,              1], #yes
                         [0.04,                               0.19,              0], #no
                      [0.67,                               0.55,               1], #yes
                      [0.02,                               0.36,               0], #no
                      [0.20,                               0.22,               0], #no
                      [0.50,                               0.47,               1], #yes
                      [0.60,                               0.49,               1]  #yes 
                    ])
                                 
                    
########## just making a graph to visualize the data

features = data[ : , : 2]
labels = data[ : , 2].reshape((data.shape[0], 1))  #
plt.scatter(features[:,0], features[:,1])
plt.xlabel('Feature 1') # FEATURE 1 LABEL
plt.ylabel('Feature 2') # FEATURE 2 LABEL


######### making the data able to be read between 1 and 0...and making the features fit into an array 

dimention1_min, dimention1_max, dimention2_min, dimention2_max = 0, 1, 0, 1

num_output = labels.shape[1]
dimention1 = [dimention1_min, dimention1_max]
dimention2 = [dimention2_min, dimention2_max]


######### 2 features (dimention 1 and 2) and one neuron using neurolab

perceptron = nl.net.newp([dimention1, dimention2], num_output) # where the math happens for the perceptron


######### implement training for the algorithm by running perceptron dot train.  go through data 10 times

error_progress = perceptron.train(features,  labels,  epochs=10, show=20, lr=0.02)

plt.plot(error_progress)
plt.ylabel('THE AMOUNT OF ERROR')
plt.xlabel('EPOCHS')
plt.title('TRAINING PROGRESS')


######### run an example of the taught algorithm

perceptron.sim([[0.8, 0.23]])
